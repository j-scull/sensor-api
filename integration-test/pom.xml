<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>projects.sensor.api</groupId>
        <artifactId>sensor-api-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>sensor-api-integration-test</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>

        <test.database.user>user</test.database.user>
        <test.database.password>password</test.database.password>

    </properties>

    <build>

        <plugins>

            <!-- copy resources to target directory and filter maven properties  -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resource-one</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/test-classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/test/resources</directory>
                                    <filtering>true</filtering>
<!--                                    <includes>-->
<!--                                        <include>docker-compose.yaml</include>-->
<!--                                    </includes>-->
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- spin up the container for testing, using docker compose file -->
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>${exec.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>start container</id>
                        <phase>test</phase>
                        <configuration>
                            <executable>docker</executable>
                            <commandlineArgs>compose -f target/test-classes/docker-compose/docker-compose.yaml up -d</commandlineArgs>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- run the integration tests -->
            <!-- Todo         -->

            <!-- tear down the container used for testing -->
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>${exec.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>tear down containers</id>
                        <phase>test</phase>
                        <configuration>
                            <executable>docker</executable>
                            <commandlineArgs>compose -f target/test-classes/docker-compose/docker-compose.yaml down -v</commandlineArgs>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


        </plugins>

        <testResources>
            <testResource>
                <directory>src/test/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>

    </build>

</project>